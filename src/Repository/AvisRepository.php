<?php

namespace App\Repository;

use App\Entity\Projet;
use App\Entity\Utilisateur;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * AvisRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AvisRepository extends EntityRepository
{
    /**
     * @param Utilisateur $utilisateur
     * @param Projet $projet
     * @return mixed|null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findOneByUtilisateurProjet(Utilisateur $utilisateur, Projet $projet)
    {
        $query = $this->_em->createQuery('SELECT a FROM App\Entity\Avis a WHERE a.utilisateur = :utilisateur AND a.projet = :projet')
            ->setParameter('utilisateur', $utilisateur)
            ->setParameter('projet', $projet)
            ->setMaxResults(1);
        try {
            return $query->getSingleResult();
        } catch (NoResultException $e) {
            return null;
        }
    }

    /**
     * @return null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findNumberPlusme()
    {
        $query = $this->_em->createQuery('SELECT COUNT(a) FROM App\Entity\Avis a WHERE a.pouce = :pouce ORDER BY a.id DESC')
            ->setParameter('pouce', 'P')
            ->setMaxResults(1);
        try {
            return $query->getSingleResult()[1];
        } catch (NoResultException $e) {
            return null;
        }
    }

    /**
     * @return null
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findNumberMoisme()
    {
        $query = $this->_em->createQuery('SELECT COUNT(a) FROM App\Entity\Avis a WHERE a.pouce = :pouce ORDER BY a.id DESC')
            ->setParameter('pouce', 'M')
            ->setMaxResults(1);
        try {
            return $query->getSingleResult()[1];
        } catch (NoResultException $e) {
            return null;
        }
    }
}
