<?php

namespace BananaStation\MusicBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * MusicRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MusicRepository extends EntityRepository {

    public function findByStyleOrder($style, $first) {
        $query = $this->_em->createQuery('SELECT m FROM BananaStationMusicBundle:Music m WHERE m.style=:style ORDER BY m.id DESC')
            ->setFirstResult($first)
            ->setMaxResults(20)
            ->setParameter('style',$style);
        try {
            return $query->getResult();
        } catch (NoResultException $e) {
            return null;
        }
    }

    public function findByTitleSearch($search) {
        $query = $this->_em->createQuery('SELECT m FROM BananaStationMusicBundle:Music m WHERE m.title LIKE :title ORDER BY m.id DESC')
            ->setParameter('title','%'.$search.'%');
        try {
            return $query->getResult();
        } catch (NoResultException $e) {
            return null;
        }
    }

    public function getTotalMusic() {
        $query = $this->_em->createQuery('SELECT COUNT(m) FROM BananaStationMusicBundle:Music m ORDER BY m.id DESC')
            ->setMaxResults(1);
        try {
            return $query->getSingleResult()[1];
        } catch (NoResultException $e) {
            return null;
        }
    }

    public function getTotalStyle($style) {
        $query = $this->_em->createQuery('SELECT COUNT(m) FROM BananaStationMusicBundle:Music m WHERE m.style = :style ORDER BY m.id DESC')
            ->setParameter('style', $style)
            ->setMaxResults(1);
        try {
            return $query->getSingleResult()[1];
        } catch (NoResultException $e) {
            return null;
        }
    }

}