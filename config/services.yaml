# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    core.slugger.class: App\Service\Slugger
    core.projet_image_uploader_listener.class: App\File\ProjetImageUploaderListener
    user.mailer.class: App\Service\Mailer
    user.alert.class: App\Service\Alert
    host_main: '%env(HOST_MAIN)%'
    host_core: '%env(HOST_CORE)%'
    host_music: '%env(HOST_MUSIC)%'
    host_notifier: '%env(HOST_NOTIFIER)%'
    host_poke: '%env(HOST_POKE)%'
    host_tron: '%env(HOST_TRON)%'
    node_poke: '%env(NODE_POKE)%'
    node_tron: '%env(NODE_TRON)%'
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    core.slugger:
        class: '%core.slugger.class%'

    core.projet_image_uploader_listener:
        class: '%core.projet_image_uploader_listener.class%'
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: preRemove }

    user.mailer:
            class: '%user.mailer.class%'
            arguments: ['@mailer','@templating','%env(MAILER_FROM)%']

    user.alert:
        class: '%user.alert.class%'